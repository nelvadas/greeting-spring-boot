# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Recuperer le code source
      uses: actions/checkout@v2
    - name: Installer JDK8 et Maven
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Compiler le JAR
      run: mvn -B package --file pom.xml
    - name: PWD
      run: pwd & ls -rtl
      
    - name: Copie JAR sur AWS 
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.AWS_HOST }}
        username: ${{ secrets.AWS_SSH_USER }}
        key: ${{ secrets.AWS_SSH_KEY }}
        port: ${{ secrets.AWS_SSH_PORT }}
        source: "./target/greeting-spring-boot-0.0.1-SNAPSHOT.jar"
        target: "/usr/webservice"
        debug: true
        timeout: 3m
        overwrite: true
      
#    - name: Construire l'image docker
#      uses: docker/build-push-action@v1.1.0
#      with:
#        username: ${{ secrets.DOCKER_USERNAME }}
#        password: ${{ secrets.DOCKER_PASSWORD }}
#        repository: nelvadas/modelis-java-app
#        tags: 1.0.1
#        tag_with_ref: true
#       tag_with_sha: true
    
  deploy:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      
      - name: PWD
        run: pwd & ls -rtl 
      - name: Deployer l'application sur AWS
        run:  echo TODO
 
